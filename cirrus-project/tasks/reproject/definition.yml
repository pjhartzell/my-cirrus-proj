description: Reproject raster
iamRoleStatements:
  - Effect: "Allow"
    Action:
      - "s3:ListBucket"
      - "s3:GetObject"
      - "s3:GetBucketLocation"
    Resource: "*"
  - Effect: "Allow"
    Action:
      - "s3:PutObject"
    Resource:
      - !Join
        - ''
        - - 'arn:aws:s3:::'
          - ${self:provider.environment.CIRRUS_DATA_BUCKET}
          - '*'
  - Effect: "Allow"
    Action: secretsmanager:GetSecretValue
    Resource:
      - arn:aws:secretsmanager:#{AWS::Region}:#{AWS::AccountId}:secret:cirrus*
environment: {}

batch:
  resources:
      Resources:
        reprojectComputeEnvironment:
          Type: AWS::Batch::ComputeEnvironment
          Properties:
            Type: MANAGED
            ComputeResources:
              MaxvCpus: 1000
              SecurityGroupIds: ${self:custom.batch.SecurityGroupIds}
              Subnets: ${self:custom.batch.Subnets}
              InstanceTypes:
                - optimal
              Type: SPOT
              AllocationStrategy: BEST_FIT_PROGRESSIVE
              SpotIamFleetRole:
                Fn::GetAtt: [ EC2SpotRole, Arn ]
              MinvCpus: 0
              InstanceRole:
                Fn::GetAtt: [ BatchInstanceProfile, Arn ]
              Tags: {"Name": "Batch Instance - #{AWS::StackName}"}
              DesiredvCpus: 0
            State: ENABLED
        reprojectJobQueue:
          Type: AWS::Batch::JobQueue
          Properties:
            ComputeEnvironmentOrder:
              - Order: 1
                ComputeEnvironment: !Ref reprojectComputeEnvironment
            State: ENABLED
            Priority: 1
        reprojectJobRole:
          Type: AWS::IAM::Role
          Properties:
            AssumeRolePolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: 'Allow'
                  Principal:
                    Service:
                      - 'ecs-tasks.amazonaws.com'
                  Action:
                    - 'sts:AssumeRole'
                  Condition:
                    ArnLike:
                      aws:SourceArn: "arn:aws:ecs:#{AWS::Region}:#{AWS::AccountId}:*"
                    StringEquals:
                      aws:SourceAccount: "#{AWS::AccountId}"
            Path: '/'
            Policies:
              - PolicyName: 'Cirrus'
                PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                    - Effect: "Allow"
                      Action:
                        - "s3:PutObject"
                      Resource:
                        - !Join
                          - ''
                          - - 'arn:aws:s3:::'
                            - ${self:provider.environment.CIRRUS_DATA_BUCKET}
                            - '*'
                        - !Join
                          - ''
                          - - 'arn:aws:s3:::'
                            - ${self:provider.environment.CIRRUS_PAYLOAD_BUCKET}
                            - '*'
                    - Effect: "Allow"
                      Action:
                        - "s3:ListBucket"
                        - "s3:GetObject"
                        - "s3:GetBucketLocation"
                      Resource: "*"
                    - Effect: "Allow"
                      Action: secretsmanager:GetSecretValue
                      Resource:
                        - arn:aws:secretsmanager:#{AWS::Region}:#{AWS::AccountId}:secret:cirrus*
                    - Effect: "Allow"
                      Action:
                        - lambda:GetFunction
                      Resource:
                        - arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:#{AWS::StackName}-*
        reprojectAsBatchJob:
          Type: "AWS::Batch::JobDefinition"
          Properties:
            JobDefinitionName: '#{AWS::StackName}-reproject'
            Type: Container
            Parameters:
              url: ""
            ContainerProperties:
              Command:
                - run
                - ${self:service}-${self:provider.stage}-reproject
                - Ref::url
              Environment: []
              Memory: 128
              Vcpus: 1
              Image: 'cirrusgeo/run-lambda:0.2.1'
              JobRoleArn: !GetAtt reprojectJobRole.Arn
            RetryStrategy:
              Attempts: 1
